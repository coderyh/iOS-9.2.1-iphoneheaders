/*
* This header is generated by classdump-dyld 1.0
* on Saturday, July 30, 2016 at 1:44:00 AM Japan Standard Time
* Operating System: Version 9.2.1 (Build 13D15)
* Image Source: /Applications/MobileMail.app/MobileMail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileMail/MobileMail-Structs.h>
#import <MobileMail/GenericSource.h>

@class MFMailMessageStore, NSString, NSArray, MFMessageRuleManager;

@interface MailboxSource : GenericSource {

	MFMailMessageStore* _store;
	NSString* _uniqueID;
	NSString* _originalPath;
	CFDictionaryRef _messageCache;
	CFSetRef _messagesRemovedByUser;
	unsigned _protectedDataIsAvailable : 1;
	unsigned _shouldThread : 1;
	NSArray* _generalObservationTokens;
	NSArray* _storeObservationTokens;
	MFMessageRuleManager* _ruleManager;

}

@property (nonatomic,retain) MFMailMessageStore * store;                      //@synthesize store=_store - In the implementation block
@property (nonatomic,retain) MFMessageRuleManager * ruleManager;              //@synthesize ruleManager=_ruleManager - In the implementation block
-(id)mailboxUids;
-(BOOL)representsMailboxUid:(id)arg1 ;
-(int)correspondingType;
-(BOOL)supportsSearch;
-(BOOL)isBaseSource;
-(void)setLastViewedMessage:(id)arg1 ;
-(BOOL)supportsDeleteAll;
-(BOOL)supportsDeleteAllAcrossSources;
-(BOOL)deleteMovesToTrash;
-(BOOL)supportsMoveAll;
-(BOOL)supportsMoveAllAcrossSources;
-(BOOL)supportsMarkAll;
-(id)accountForAutoFetch;
-(void)markAllMessagesAsViewed;
-(void)markAllMessagesAsNotViewed;
-(void)markAllMessagesAsFlagged;
-(void)markAllMessagesAsNotFlagged;
-(BOOL)shouldShowUnreadCount;
-(BOOL)shouldCompactOnFetch;
-(id)lastViewedMessage;
-(id)messageForMessageID:(id)arg1 ;
-(id)uniqueIDForStorage;
-(BOOL)representsMailboxID:(unsigned)arg1 ;
-(void)reloadPreferences;
-(void)setProtectedDataAvailable:(BOOL)arg1 ;
-(void)_conversationHasMerged:(id)arg1 ;
-(void)emptyTrashAsNeeded;
-(unsigned long long)currentFetchWindow;
-(long long)fetchMobileSynchronously:(unsigned long long)arg1 preservingUID:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(BOOL)canLoadOlderMessages;
-(long long)fetchNumOlderMessages:(unsigned long long)arg1 preservingUID:(id)arg2 ;
-(CFDictionaryRef)copySendersByLibraryIDForConversation:(long long)arg1 ;
-(id)messageForMessageInfo:(id)arg1 cacheIfNotAlready:(BOOL)arg2 ;
-(id)cachedMessageForMessageInfo:(id)arg1 ;
-(id)bulletinsContext;
-(unsigned long long)remoteMessageCount;
-(id)noMessagesLabelText;
-(void)markAllMessagesAsDeletedOrArchived:(unsigned long long)arg1 withObserver:(id)arg2 ;
-(void)moveAllMessagesWithObserver:(id)arg1 toMailbox:(id)arg2 ;
-(unsigned long long)allMessageCount;
-(unsigned long long)remoteAndLocalUnreadCount;
-(unsigned long long)onlyRemoteUnreadCount;
-(id)copyMessageInfosForConversationsContainingMessagesMatchingCriterion:(id)arg1 ;
-(BOOL)needsFetch;
-(id)uniqueIDForStatus;
-(BOOL)supportsFlagging;
-(BOOL)shouldThreadConversations;
-(BOOL)shouldIncludeWholeThreads;
-(BOOL)shouldPlayNewMailSound;
-(id)equivalentCriterion;
-(id)remoteIDsUsingSearchContext:(id)arg1 limit:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)registerForGeneralNotifications;
-(void)unregisterForStoreNotifications;
-(void)unregisterForGeneralNotifications;
-(void)_resetSourceAfterAccountsChange;
-(void)_conversationFlagsChanged:(id)arg1 ;
-(void)_storeMessageFlagsChanged:(id)arg1 ;
-(void)_storeAddedMessages:(id)arg1 ;
-(void)_storeRemovedMessages:(id)arg1 ;
-(void)_forwardNotification:(id)arg1 ;
-(void)registerForNotificationsForStore:(id)arg1 ;
-(id)_copyObjectsByApplyingPendingChangesToObjects:(id)arg1 ;
-(id)_copyMessageInfosByApplyingPendingChangesToMessageInfos:(id)arg1 ;
-(id)_messageWithLibraryID:(unsigned)arg1 ;
-(unsigned long long)_messageCountForFetch;
-(void)_addAllMessageChangeSetWithOperation:(id)arg1 ;
-(BOOL)_shouldDeleteImmediately;
-(void)_deleteImmediatelyAllMessagesWithObserver:(id)arg1 ;
-(void)_deleteOrArchiveAllMessages:(unsigned long long)arg1 withObserver:(id)arg2 ;
-(void)_forwardNotification:(id)arg1 userInfo:(id)arg2 ;
-(void)_updateCachedMessage:(id)arg1 ;
-(MFMessageRuleManager *)ruleManager;
-(id)_copyMessagesByApplyingPendingChangesToMessages:(id)arg1 ;
-(void)setRuleManager:(MFMessageRuleManager *)arg1 ;
-(MFMailMessageStore *)store;
-(void)setStore:(MFMailMessageStore *)arg1 ;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(BOOL)isProtectedDataAvailable;
-(void)close;
-(unsigned long long)messageCount;
-(void)open;
-(void)applyChanges;
-(id)_store;
-(id)lastViewedMessageDate;
-(BOOL)supportsArchiving;
-(BOOL)shouldArchiveByDefault;
-(BOOL)shouldGrowFetchWindow;
-(id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned)arg2 ;
-(BOOL)canFetchSearchResults;
-(long long)fetchMessagesMatchingCriterion:(id)arg1 limit:(unsigned)arg2 ;
-(id)initWithMailbox:(id)arg1 ;
-(id)mailboxName;
-(id)copyMessageInfosMatchingCriterion:(id)arg1 ;
-(long long)oldestKnownConversation;
-(BOOL)supportsThreadOperations;
-(void)flushCaches;
-(id)diagnosticDescription;
@end

