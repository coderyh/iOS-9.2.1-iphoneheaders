/*
* This header is generated by classdump-dyld 1.0
* on Saturday, July 30, 2016 at 1:33:16 AM Japan Standard Time
* Operating System: Version 9.2.1 (Build 13D15)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class VKViewVolume;

@interface VKViewTransform : NSObject {

	shared_ptr<vk::ViewTransform>* _viewTransform;

}

@property (nonatomic,readonly) BOOL isMercator; 
@property (nonatomic,readonly) BOOL isGeocentric; 
@property (nonatomic,readonly) int coordinateSpace; 
@property (nonatomic,readonly) CGSize screenSizeInPoints; 
@property (nonatomic,readonly) CGSize screenSizeInPixels; 
@property (nonatomic,readonly) float contentScale; 
@property (nonatomic,readonly) VKPoint translation; 
@property (nonatomic,readonly) VKPoint translationInMercator; 
@property (nonatomic,readonly) Matrix<double upVector; 
@property (nonatomic,readonly) Matrix<double rightVector; 
@property (nonatomic,readonly) Matrix<double forwardVector; 
@property (nonatomic,readonly) float heading; 
@property (nonatomic,readonly) float degreesFromPlumb; 
@property (nonatomic,readonly) double widthOverDepth; 
@property (nonatomic,readonly) const SCD_Struct_VK6* viewProjectionMatrix; 
@property (nonatomic,readonly) double nearPlaneDistance; 
@property (nonatomic,readonly) double farPlaneDistance; 
@property (nonatomic,readonly) VKViewVolume * viewVolume; 
@property (nonatomic,readonly) double focusDistance; 
@property (nonatomic,readonly) VKPoint focusPoint; 
@property (assign,nonatomic) const SCD_Struct_VK6* scaledViewProjectionMatrix; 
-(id)init;
-(int)coordinateSpace;
-(float)contentScale;
-(VKPoint)translation;
-(float)heading;
-(Matrix<double)rightVector;
-(Matrix<double)forwardVector;
-(VKViewVolume *)viewVolume;
-(const SCD_Struct_VK6*)viewProjectionMatrix;
-(void)setScaledViewProjectionMatrix:(const SCD_Struct_VK6*)arg1 ;
-(void)setCoordinateSpace:(int)arg1 screenSizeInPixels:(CGSize)arg2 contentScale:(float)arg3 frustum:(SCD_Struct_VK7)arg4 position:(VKPoint)arg5 orientation:(const SCD_Struct_VK6*)arg6 horizontalOffset:(float)arg7 ;
-(VKPoint)groundPointFromScreenPoint:(CGPoint)arg1 ;
-(shared_ptr<vk::ViewTransform>*)viewTransform;
-(Matrix<double)upVector;
-(BOOL)isGeocentric;
-(BOOL)isMercator;
-(const SCD_Struct_VK6*)scaledViewProjectionMatrix;
-(SCD_Struct_VK6)orientationMatrixAtWorldPoint:(VKPoint)arg1 ;
-(double)nearPlaneDistance;
-(CGSize)screenSizeInPixels;
-(VKPoint)groundPointFromPixel:(Matrix<float, 2, 1>)arg1 ;
-(double)focusDistance;
-(float)degreesFromPlumb;
-(double)widthOverDepth;
-(CGSize)screenSizeInPoints;
-(VKPoint)translationInMercator;
-(double)farPlaneDistance;
-(VKPoint)focusPoint;
@end

