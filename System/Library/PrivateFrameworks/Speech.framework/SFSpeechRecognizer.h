/*
* This header is generated by classdump-dyld 1.0
* on Saturday, July 30, 2016 at 1:32:27 AM Japan Standard Time
* Operating System: Version 9.2.1 (Build 13D15)
* Image Source: /System/Library/PrivateFrameworks/Speech.framework/Speech
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AFDictationDelegate.h>

@protocol SFSpeechRecognizerDelegate;
@class AFDictationConnection, NSString, NSLocale, NSOperationQueue;

@interface SFSpeechRecognizer : NSObject <AFDictationDelegate> {

	AFDictationConnection* _dictationConnection;
	NSString* _languageCode;
	NSLocale* _locale;
	id<SFSpeechRecognizerDelegate> _delegate;
	long long _defaultTaskHint;
	NSOperationQueue* _queue;

}

@property (getter=isAvailable,nonatomic,readonly) BOOL available; 
@property (nonatomic,copy,readonly) NSLocale * locale;                                    //@synthesize locale=_locale - In the implementation block
@property (assign,nonatomic,__weak) id<SFSpeechRecognizerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) long long defaultTaskHint;                                   //@synthesize defaultTaskHint=_defaultTaskHint - In the implementation block
@property (nonatomic,retain) NSOperationQueue * queue;                                    //@synthesize queue=_queue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)supportedLocales;
-(void)setDelegate:(id<SFSpeechRecognizerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<SFSpeechRecognizerDelegate>)delegate;
-(NSLocale *)locale;
-(void)dictationConnnectionDidChangeAvailability:(id)arg1 ;
-(BOOL)isAvailable;
-(NSOperationQueue *)queue;
-(void)setQueue:(NSOperationQueue *)arg1 ;
-(id)recognitionTaskWithRequest:(id)arg1 resultHandler:(/*^block*/id)arg2 ;
-(void)prepareWithRequest:(id)arg1 ;
-(id)recognitionTaskWithResultHandler:(/*^block*/id)arg1 ;
-(long long)defaultTaskHint;
-(void)setDefaultTaskHint:(long long)arg1 ;
-(id)initWithLocale:(id)arg1 ;
-(void)_sendEngagementFeedback:(long long)arg1 requestIdentifier:(id)arg2 ;
-(id)recognitionTaskWithRequest:(id)arg1 delegate:(id)arg2 ;
@end

