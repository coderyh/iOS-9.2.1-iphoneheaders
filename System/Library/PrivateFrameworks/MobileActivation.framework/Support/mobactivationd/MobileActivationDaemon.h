/*
* This header is generated by classdump-dyld 1.0
* on Saturday, July 30, 2016 at 1:30:25 AM Japan Standard Time
* Operating System: Version 9.2.1 (Build 13D15)
* Image Source: /System/Library/PrivateFrameworks/MobileActivation.framework/Support/mobactivationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <mobactivationd/mobactivationd-Structs.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <mobactivationd/MobileActivationProtocol.h>

@class NSString;

@interface MobileActivationDaemon : NSObject <NSXPCListenerDelegate, MobileActivationProtocol> {

	void* session;
	void* _dark;

}

@property (assign) void* dark;                                      //@synthesize dark=_dark - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setDark:(void*)arg1 ;
-(void*)dark;
-(id)cfBooleanTONSNumber:(CFBooleanRef)arg1 ;
-(id)getTicketStatus;
-(id)handleActivation:(id)arg1 ;
-(id)getDeviceActivationState;
-(id)getDeviceActivationBuild;
-(void)requestReactivation;
-(id)createReCertInfo;
-(id)handleReCert:(id)arg1 ;
-(id)init;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)destorySession:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)createSessionRequestWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)handleSessionResponse:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)createActivationInfoWithSession:(id)arg1 CompletionBlock:(/*^block*/id)arg2 ;
-(void)handleActivationInfoWithSession:(id)arg1 CompletionBlock:(/*^block*/id)arg2 ;
-(void)createActivationInfoWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)handleActivationInfo:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)getTicketStatusWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)isDeviceBrickedWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)deactivateDeviceWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)requestDeviceReactivationWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)getActivationStateWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)getActivationBuildWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)createReCertInfoWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)handleReCertInfo:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)copyRegulatoryImagesWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)copyActivationRecordWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)unbrickDeviceWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)recertifyDevice:(id)arg1 WithCompletionBlock:(/*^block*/id)arg2 ;
-(BOOL)isDeviceABrick;
-(id)createActivationInfo;
-(void)deactivateDevice;
@end

