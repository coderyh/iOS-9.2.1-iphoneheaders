/*
* This header is generated by classdump-dyld 1.0
* on Saturday, July 30, 2016 at 1:31:15 AM Japan Standard Time
* Operating System: Version 9.2.1 (Build 13D15)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <QuartzCore/CALayer.h>

@protocol OS_dispatch_queue, PLTileProcessor;
@class NSData, PLCache, NSMutableSet, NSMutableDictionary, NSObject, CALayer;

@interface PLTiledLayer : CALayer {

	NSData* _jpegData;
	jpegDecoder* _decoders;
	int _decoderCount;
	int _tilePixelSize;
	CGSize _fullSize;
	int _err;
	PLCache* _tileCache;
	iosPoolOpaqueRef _surfacePool;
	NSMutableSet* _visibleTileIds;
	NSMutableDictionary* _subLayers;
	NSObject*<OS_dispatch_queue> _decodeQueue;
	NSObject*<OS_dispatch_queue> _filterQueue;
	unsigned _requestId;
	int _zoomLevel;
	CALayer* _placeholderLayer;
	CGImageRef _placeholderImage;
	double _zoomStartScale;
	int _lock;
	id<PLTileProcessor> _tileProcessor;
	unsigned long long _currentProcessingID;
	unsigned long long _nextProcessingID;
	CGRect _lastVisibleRect;
	double _lastZoomScale;
	BOOL _showTileBorders;

}

@property (assign,nonatomic,__weak) id<PLTileProcessor> tileProcessor; 
@property (nonatomic,readonly) CGSize jpegImageSize; 
-(void)dealloc;
-(void)removeAllTiles;
-(double)zoomStartScaleForImage:(CGSize)arg1 placeholderImageSize:(CGSize)arg2 ;
-(void)prepareForDecoding;
-(id<PLTileProcessor>)tileProcessor;
-(void)updateSubLayers:(id)arg1 ;
-(BOOL)visibleTileRegionHasChanged:(CGRect)arg1 level:(int)arg2 ;
-(void)decodeImageRectangle:(CGRect)arg1 forLevel:(int)arg2 requestId:(unsigned)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)setVisibleRectangle:(CGRect)arg1 zoomScale:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setTileProcessor:(id<PLTileProcessor>)arg1 ;
-(void)setTileProcessingEnabled:(BOOL)arg1 withProcessingID:(unsigned long long)arg2 placeholderImage:(CGImageRef)arg3 ;
-(CGSize)jpegImageSize;
-(id)initWithJPEGData:(id)arg1 placeholderImage:(CGImageRef)arg2 ;
-(void)setVisibleRectangle:(CGRect)arg1 zoomScale:(double)arg2 ;
-(void)flushCache;
@end

